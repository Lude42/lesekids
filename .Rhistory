ifelse(year == 2021,recode(eduf, !!!rc21 ),NA))))),
edum = ifelse(year == 2001,recode(edum, !!!rc01 ),
ifelse(year == 2006,recode(edum, !!!rc06 ),
ifelse(year == 2011,recode(edum, !!!rc11 ),
ifelse(year == 2016,recode(edum, !!!rc16 ),
ifelse(year == 2021,recode(edum, !!!rc21 ),NA))))),
eduf = ordered(factor(eduf)),
edum = ordered(factor(edum)),
year = ordered(factor(year ))
)) %>%
ungroup()
} )
load("C:/Users/Uludewig/Documents/IGLU/data_2016_imp_ranger_V6.Rdata")
l_wrk <- map(1:10, function(x) {
rbind(
l_wrk[[1]][[x]],
l_wrk[[2]][[x]],
l_wrk[[3]][[x]],
l_wrk[[4]][[x]],
l_wrk[[5]][[x]])
})
rc01 <- list(`1` = 0L, `2` = 0L, `3` = 1L, `4` = 1L, `5` = 1L, `6` = 1L, `7` = 2L, `8` = 2L)
rc06 <- list(`1` = 0L,  `4` = 1L, `5` = 2L, `6` = 2L, `7` = 2L, `8` = 2L) #  `2` = 0L,`3` = 1L,
rc11 <- list(`1` = 0L, `2` = 0L, `3` = 0L, `4` = 1L, `5` = 1L, `6` = 1L, `7` = 2L, `8` = 2L, `9` = 2L)
rc16 <- list(`1` = 0L, `2` = 0L, `3` = 0L, `4` = 1L, `5` = 1L, `6` = 1L, `7` = 2L, `8` = 2L, `9` = 2L)
rc21 <- list(`1` = 0L, `2` = 0L, `3` = 0L, `4` = 1L, `5` = 1L, `6` = 1L, `7` = 2L, `8` = 2L, `9` = 2L)
imp_list <- map(1:10, function(x) {
data.frame(l_wrk[[x]] %>%
mutate(occf = ordered(factor(occf)),
occm = ordered(factor(occm)),
eduf = ifelse(year == 2001,recode(eduf, !!!rc01 ),
ifelse(year == 2006,recode(eduf, !!!rc06 ),
ifelse(year == 2011,recode(eduf, !!!rc11 ),
ifelse(year == 2016,recode(eduf, !!!rc16 ),
ifelse(year == 2021,recode(eduf, !!!rc21 ),NA))))),
edum = ifelse(year == 2001,recode(edum, !!!rc01 ),
ifelse(year == 2006,recode(edum, !!!rc06 ),
ifelse(year == 2011,recode(edum, !!!rc11 ),
ifelse(year == 2016,recode(edum, !!!rc16 ),
ifelse(year == 2021,recode(edum, !!!rc21 ),NA))))),
eduf = ordered(factor(eduf)),
edum = ordered(factor(edum)),
year = ordered(factor(year ))
)) %>%
ungroup()
} )
load("C:/Users/Uludewig/Documents/IGLU/data_2016_imp_ranger_V6_2.Rdata")
bdat <- BIFIEsurvey::BIFIE.data.jack( data=imp_list,
jktype="JK_TIMSS2",
jkzone= "JKZONE",
jkrep ="JKREP",
wgt = "TOTWGT",
pv_vars = "asrrea")
##### Übersicht
uni20 <- BIFIEsurvey::BIFIE.freq(bdat,vars=c("mig",  "eduf","edum", "occf","occm", "book2"),group="year")
uni20$stat %>% reshape2::dcast(var +varval~ groupval , value.var = "perc" )
uni20$stat %>% ggplot(aes(x = groupval, y = perc, group =  varval, fill =  factor(varval))) + facet_wrap(var~.) + geom_area()
rm(list = ls())
library(purrr)
library(LNIRT)
data(CredentialForm1)
rm(list = ls())
library(LNIRT)
data(CredentialForm1)
### DATA OBJECTS FOR LNIRT
### RA Data
Y <-as.matrix(CredentialForm1[c(which(colnames(CredentialForm1)=="iraw.1"):which(colnames(CredentialForm1)=="iraw.170"))])
Y
N <- nrow(Y)
### RT Data
RT<-as.matrix(CredentialForm1[c(which(colnames(CredentialForm1)=="idur.1"):which(colnames(CredentialForm1)=="idur.170"))])
RT
RT[RT==0]<-NA ## zero RTs are coded as missing values
RT<-log(RT) ## logarithmic transformation of RT
RT
## RUN LNIRT MODEL 0
set.seed(12345) ## used to obtain the results reported in the paper ##
out0 <- LNIRT(RT=RT,Y=Y,XG=5000,burnin=10,ident=2)
summary(out0)
out0$XPA
install.packages("htmltools")
library(htmltools)
raw <- includeHTML("quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509")
library(xml2)
library("XML")
library("methods")
install.packages("XML")
raw <- includeHTML("quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509.xml")
raw <- xmlParse("quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509.xml")
library("XML")
library("methods")
raw <- xmlParse("quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509.xml")
raw <- xmlParse('quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509.xml')
raw <- xmlParse(file =  'quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509.xml')
raw
raw <- xmlParse(file = 'quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509.xml', version="1.0" encoding="UTF-8")
?xmlParse
raw <- xmlTreeParse(file = 'quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509.xml', version="1.0" encoding="UTF-8")
raw <- xmlTreeParse(file = 'quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509.xml',encoding="UTF-8")
raw <- xmlTreeParse(file = 'quiz-M6_quanti_methoden-Standard für M6_Abschluss-20240206-1509.xml',encoding="UTF-8")
raw <- xmlTreeParse(file = 'quiz-M6_quanti.xml',encoding="UTF-8")
raw <- xmlTreeParse(file = 'quiz-M6_quanti.xml',encoding="UTF-8", version = "1.0")
raw <- xmlParse(file = 'quiz-M6_quanti.xml',encoding="UTF-8", version = "1.0")
raw <- xmlParse(file = 'quiz-M6_quanti.xml',encoding="UTF-8")
a <- sample(c(-1,1), 10000, T)
b <- sample(c(-1,1), 10000, T)
b[which(a == 1)] <- b[which(a == 1)] * 2 d <- data.frame(a,b)
table(d)
cor(a,b)
a
b
b[which(a == 1)] * 2 d <- data.frame(a,b)
b[which(a == 1)] <- b[which(a == 1)] * 2
d <- data.frame(a,b)
d
table(d)
cor(a,b)
plot(d)
library(ggplot2)
library(dplyr)
library(tidyr)
library(faux)
dat <- rnorm_multi(n = 100,
mu = c(0, 20, 20),
sd = c(1, 5, 5),
r = c(0.5, 0.5, 0.25),
varnames = c("A", "B", "C"),
empirical = FALSE)
install.packages("faux")
dat <- rnorm_multi(n = 100,
mu = c(0, 20, 20),
sd = c(1, 5, 5),
r = c(0.5, 0.5, 0.25),
varnames = c("A", "B", "C"),
empirical = FALSE)
library(faux)
dat <- rnorm_multi(n = 100,
mu = c(0, 20, 20),
sd = c(1, 5, 5),
r = c(0.5, 0.5, 0.25),
varnames = c("A", "B", "C"),
empirical = FALSE)
dat
dat <- rnorm_multi(n = 100,
mu = c(0, 20),
sd = c(1, 5),
r = c(0.5 ),
varnames = c("A", "B"),
empirical = FALSE)
dat
plot(dat)
dat <- rnorm_multi(n = 50,
mu = c(0, 20),
sd = c(1, 5),
r = c(0.5 ),
varnames = c("A", "B"),
empirical = FALSE)
plot(dat)
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
###/// Titel: Lesen im Kontext von sozialer Herkunft und Migrationshintergrund \\\\\###
###///////////////////////////////////// Kapitel: 07 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
###////////////////// Ersteller: Theresa Schlitter & Ruben Kleinkorres \\\\\\\\\\\\\###
###//////////////////////////// Erstellungsdatum: 14.05.2022 \\\\\\\\\\\\\\\\\\\\\\\###
###///////////////////////////// Letzte ?nderung: 24.08.2022 \\\\\\\\\\\\\\\\\\\\\\\###
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
# Allgemeine Informationen ----
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
#### 1. Hintergrundmaterial
# Was hinter den Abbildungen f?r Analysew?nsche stehen sieht man hier:
# //tu-dortmund.de/FK12/FK12/Forschungsprojekte/IFS-McElvany-IGLU-2021/05_Daten/03_Haupttest/05_Auswertung_Hauptbericht/Auswertung_Kapitel_7/P21_Kap07_Ben?tigte_Auswertungen.docx
#### 2. Abk?rzungen
#pbooks   -   B?chervariable dichotom (mehr als 100 B?cher vs. weniger als 100 B?cher zu Hause, Quelle: EFB)
#sbooks   -   B?chervariable dichotom (mehr als 100 B?cher vs. weniger als 100 B?cher zu Hause, Quelle: SFB)
#edupar   -   Education status parents (studiert vs. nicht studiert, Quelle: EFB)
#edupar2  -   Education status parents (4 Gruppen, s. Abb. 6.7 in P16, Quelle: EFB)
#famlan   -   family language (never German vs. alwasys, almost always, sometimes German, Quelle: EFB)
#bornpar  -   born parents (Geburtsland Eltern; Deutschland vs. einer im Ausland vs. beide im Ausland, Quelle: EFB)
#bornpar1 -   born parents 1 (Geburtsland Eltern; Deutschland vs. einer im Ausland, Quelle: EFB)
#bornpar2 -   born parents 2 (Geburtsland Eltern; Deutschland vs. beide im Ausland, Quelle: EFB)
#aequiv2  -   dichotome Indexvariable, ob armutsgef?hrdet oder nicht
#EGP      -   EGP der Bezugsperson
#EGP2     -   Dummyvariable f?r EGP-Gruppen f?r Abb. 7.8,Kodierung nach S. 245, P16-Bericht
#hisei    -   highest ISEI
#hisei2   -   Dummyvariable f?r hohen HISEI f?r Tabelle 7.4
#hi_ses   -   Dummyvariable f?r hoher sozio?konomischer Status f?r Tab74, s. P16, S. 227 bzw. 205
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
# A. Vorbereitung ----
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
rm(list = ls())
#### 1. Pakete laden ####
if (!require("foreign")) install.packages("foreign")
if (!require("BIFIEsurvey")) install.packages("BIFIEsurvey")
if (!require("questionr")) install.packages("questionr")
if (!require("xlsx")) install.packages("xlsx")
if (!require("car")) install.packages("car")
if (!require("dplyr")) install.packages("dplyr")
if (!require("readr")) install.packages("readr")
library(BIFIEsurvey)
library(foreign)
library(questionr)
library(xlsx)
#### 5. NAs
ninenine2NA <- function(x)  {ifelse(x == -99 | x == -98 | x == -96 | x == -97 |x == 96 | x == 97 | x == 99 | x == 98 | x == 9996 | x == 9999 | x == 9997, NA, x) }
nine2NA <- function(x)  {ifelse(x == 9, NA, x) }
stud_lvl <- stud_lvl %>% mutate(ASXH36A_ISEI = readr::parse_number(ASXH36A_ISEI),
ASXH36B_ISEI = readr::parse_number(ASXH36B_ISEI))
# 4.1 Internationale Daten auf Student Level einlesen
load(paste0(daten_int,"/all_countries_V5.RData"))
### 4.1 Nationale Daten auf Student Level einlesen
load(paste0(daten_nat,"/03_IGLU2021_stud_lvl_V2.RData"))
#daten_nat <- "W:/Forschungsprojekte/IFS-McElvany-IGLU-2021/05_Daten/03_Haupttest/05_Auswertung_Hauptbericht/Master/national"
# daten_nat <- "C:/Users/rkleinkorres/Documents/IFS/IGLU/07_Berichtsband/2021/04_Auswertung_Hauptbericht/05_Auswertung_Hauptbericht_20221012/Master/national"
# daten_nat <- "//tu-dortmund.de/FK12/FK12/Forschungsprojekte/IFS-McElvany-IGLU-2021/05_Daten/03_Haupttest/05_Auswertung_Hauptbericht/Master/national"
daten_nat <-  "P:/IFS-McElvany-IGLU-2021/05_Daten/03_Haupttest/05_Auswertung_Hauptbericht/Master/national"
### 4.1 Nationale Daten auf Student Level einlesen
load(paste0(daten_nat,"/03_IGLU2021_school_V3.Rdata"))
### 4.3 Nationale Daten auf School Level einlesen
load(paste0(daten_nat,"/03_IGLU2021_school_V2.RData"))
### 4.1 Nationale Daten auf Student Level einlesen
load(paste0(daten_nat,"/03_IGLU2021_stud_lvl_V2.Rdata"))
#### 5. NAs
ninenine2NA <- function(x)  {ifelse(x == -99 | x == -98 | x == -96 | x == -97 |x == 96 | x == 97 | x == 99 | x == 98 | x == 9996 | x == 9999 | x == 9997, NA, x) }
nine2NA <- function(x)  {ifelse(x == 9, NA, x) }
stud_lvl <- stud_lvl %>% mutate(ASXH36A_ISEI = readr::parse_number(ASXH36A_ISEI),
ASXH36B_ISEI = readr::parse_number(ASXH36B_ISEI))
stud_lvl <- stud_lvl %>% mutate(ASXH36A_ISEI = readr::parse_number(ASXH36A_ISEI),
ASXH36B_ISEI = readr::parse_number(ASXH36B_ISEI), HISEI = pmax(ASXH36A_ISEI,ASXH36B_ISEI, na.rm = T))
### 4.1 Nationale Daten auf Student Level einlesen
load(paste0(daten_nat,"/03_IGLU2021_stud_lvl_V2.Rdata"))
stud_lvl <- stud_lvl %>%
mutate(
ASXH36A_ISEI = readr::parse_number(ASXH36A_ISEI),
ASXH36B_ISEI = readr::parse_number(ASXH36B_ISEI),
HISEI = pmax(ASXH36A_ISEI,ASXH36B_ISEI, na.rm = T))
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(mean )
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(mean, na.rm = T  )
rbind(
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(min, na.rm = T  ),
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(mean, na.rm = T  ),
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(sd, na.rm = T  ),
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(max, na.rm = T  )
)
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
###/// Titel: Lesen im Kontext von sozialer Herkunft und Migrationshintergrund \\\\\###
###///////////////////////////////////// Kapitel: 07 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
###////////////////// Ersteller: Theresa Schlitter & Ruben Kleinkorres \\\\\\\\\\\\\###
###//////////////////////////// Erstellungsdatum: 14.05.2022 \\\\\\\\\\\\\\\\\\\\\\\###
###///////////////////////////// Letzte ?nderung: 24.08.2022 \\\\\\\\\\\\\\\\\\\\\\\###
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
# Allgemeine Informationen ----
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
#### 1. Hintergrundmaterial
# Was hinter den Abbildungen f?r Analysew?nsche stehen sieht man hier:
# //tu-dortmund.de/FK12/FK12/Forschungsprojekte/IFS-McElvany-IGLU-2021/05_Daten/03_Haupttest/05_Auswertung_Hauptbericht/Auswertung_Kapitel_7/P21_Kap07_Ben?tigte_Auswertungen.docx
#### 2. Abk?rzungen
#pbooks   -   B?chervariable dichotom (mehr als 100 B?cher vs. weniger als 100 B?cher zu Hause, Quelle: EFB)
#sbooks   -   B?chervariable dichotom (mehr als 100 B?cher vs. weniger als 100 B?cher zu Hause, Quelle: SFB)
#edupar   -   Education status parents (studiert vs. nicht studiert, Quelle: EFB)
#edupar2  -   Education status parents (4 Gruppen, s. Abb. 6.7 in P16, Quelle: EFB)
#famlan   -   family language (never German vs. alwasys, almost always, sometimes German, Quelle: EFB)
#bornpar  -   born parents (Geburtsland Eltern; Deutschland vs. einer im Ausland vs. beide im Ausland, Quelle: EFB)
#bornpar1 -   born parents 1 (Geburtsland Eltern; Deutschland vs. einer im Ausland, Quelle: EFB)
#bornpar2 -   born parents 2 (Geburtsland Eltern; Deutschland vs. beide im Ausland, Quelle: EFB)
#aequiv2  -   dichotome Indexvariable, ob armutsgef?hrdet oder nicht
#EGP      -   EGP der Bezugsperson
#EGP2     -   Dummyvariable f?r EGP-Gruppen f?r Abb. 7.8,Kodierung nach S. 245, P16-Bericht
#hisei    -   highest ISEI
#hisei2   -   Dummyvariable f?r hohen HISEI f?r Tabelle 7.4
#hi_ses   -   Dummyvariable f?r hoher sozio?konomischer Status f?r Tab74, s. P16, S. 227 bzw. 205
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
# A. Vorbereitung ----
###///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\###
rm(list = ls())
#### 1. Pakete laden ####
if (!require("foreign")) install.packages("foreign")
if (!require("BIFIEsurvey")) install.packages("BIFIEsurvey")
if (!require("questionr")) install.packages("questionr")
if (!require("xlsx")) install.packages("xlsx")
if (!require("car")) install.packages("car")
if (!require("dplyr")) install.packages("dplyr")
if (!require("readr")) install.packages("readr")
library(BIFIEsurvey)
library(foreign)
library(questionr)
library(xlsx)
### 4.1 Nationale Daten auf Student Level einlesen
load(paste0(daten_nat,"/03_IGLU2021_stud_lvl_V2.Rdata"))
### 4.1 Nationale Daten auf Student Level einlesen
load(paste0(daten_nat,"/03_IGLU2021_stud_lvl_V2.Rdata"))
#daten_nat <- "W:/Forschungsprojekte/IFS-McElvany-IGLU-2021/05_Daten/03_Haupttest/05_Auswertung_Hauptbericht/Master/national"
# daten_nat <- "C:/Users/rkleinkorres/Documents/IFS/IGLU/07_Berichtsband/2021/04_Auswertung_Hauptbericht/05_Auswertung_Hauptbericht_20221012/Master/national"
# daten_nat <- "//tu-dortmund.de/FK12/FK12/Forschungsprojekte/IFS-McElvany-IGLU-2021/05_Daten/03_Haupttest/05_Auswertung_Hauptbericht/Master/national"
daten_nat <-  "P:/IFS-McElvany-IGLU-2021/05_Daten/03_Haupttest/05_Auswertung_Hauptbericht/Master/national"
### 4.2 Nationale Daten auf Teacher Level einlesen
load(paste0(daten_nat,"/03_IGLU2021_teacher_V2.RData"))
### 4.1 Nationale Daten auf Student Level einlesen
load(paste0(daten_nat,"/03_IGLU2021_stud_lvl_V2.Rdata"))
#### 5. NAs
ninenine2NA <- function(x)  {ifelse(x == -99 | x == -98 | x == -96 | x == -97 |x == 96 | x == 97 | x == 99 | x == 98 | x == 9996 | x == 9999 | x == 9997, NA, x) }
nine2NA <- function(x)  {ifelse(x == 9, NA, x) }
stud_lvl <- stud_lvl %>%
mutate(
ASXH36A_ISEI = ninenine2NA(readr::parse_number(ASXH36A_ISEI)),
ASXH36B_ISEI = ninenine2NA(readr::parse_number(ASXH36B_ISEI)),
HISEI = pmax(ASXH36A_ISEI,ASXH36B_ISEI, na.rm = T))
rbind(
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(min, na.rm = T  ),
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(mean, na.rm = T  ),
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(sd, na.rm = T  ),
stud_lvl %>% select(ASXH36A_ISEI,ASXH36B_ISEI, HISEI) %>% summarise_all(max, na.rm = T  )
)
tab2 %>% filter(name21 == "ASBH01B") %>%
reshape2::dcast(Land ~vallab, value.var = "perc" )
## understand gamma
itemPool = 200
b = rnorm(itemPool,-1, 1) # -1.12
#b = rep(seq(-3,3,0.1), each = 3) # -1.12
itemPar = data.frame(item = 1:length(b),b  )
library(purrr)
dat <- map(1:1000, function(p) {
map(seq(0,1, by = 0.2 ), function(gamma) {
map(seq(-3,3,by = 1), function(i) {
weights <- dnorm(itemPar$b,i,1)
w <- (1 - gamma) * weights + gamma * (1 /length(b))
auswahl <- sample(1:length(b), size = 20,
replace = FALSE, prob = w)
cbind(p,i,gamma, itemPar[auswahl,])
}) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
library(ggplot2)
dat %>%
ggplot(aes(x = b, color = factor(i))) +
geom_density(adjust = 4) +
facet_wrap(~ gamma)
dat <- map(1:1000, function(p) {
map(seq(0,1, by = 0.2 ), function(gamma) {
map(seq(-3,3,by = 1), function(i) {
weights <- dnorm(itemPar$b,i,0.5)
w <- (1 - gamma) * weights + gamma * (1 /length(b))
auswahl <- sample(1:length(b), size = 20,
replace = FALSE, prob = w)
cbind(p,i,gamma, itemPar[auswahl,])
}) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
library(ggplot2)
#dev.off()
dat %>%
ggplot(aes(x = b, color = factor(i))) +
geom_density(adjust = 4) +
facet_wrap(~ gamma)
dat <- map(1:1000, function(p) {
map(seq(0,1, by = 0.1 ), function(gamma) {
map(seq(-3,3,by = 1), function(i) {
weights <- dnorm(itemPar$b,i,0.1)
w <- (1 - gamma) * weights + gamma * (1 /length(b))
auswahl <- sample(1:length(b), size = 20,
replace = FALSE, prob = w)
cbind(p,i,gamma, itemPar[auswahl,])
}) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
library(ggplot2)
#dev.off()
dat %>%
ggplot(aes(x = b, color = factor(i))) +
geom_density(adjust = 4) +
facet_wrap(~ gamma)
dat <- map(1:1000, function(p) {
map(seq(0,1, by = 0.1 ), function(gamma) {
map(seq(-3,3,by = 1), function(i) {
weights <- dnorm(itemPar$b,i,0.6)
w <- (1 - gamma) * weights + gamma * (1 /length(b))
auswahl <- sample(1:length(b), size = 20,
replace = FALSE, prob = w)
cbind(p,i,gamma, itemPar[auswahl,])
}) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
library(ggplot2)
#dev.off()
dat %>%
ggplot(aes(x = b, color = factor(i))) +
geom_density(adjust = 4) +
facet_wrap(~ gamma)
dat <- map(1:1000, function(p) {
map(seq(0,1, by = 0.1 ), function(gamma) {
map(seq(-3,3,by = 1), function(i) {
weights <- dnorm(itemPar$b,i,1)
w <- (1 - gamma) * weights + gamma * (1 /length(b))
auswahl <- sample(1:length(b), size = 20,
replace = FALSE, prob = w)
cbind(p,i,gamma, itemPar[auswahl,])
}) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
library(ggplot2)
#dev.off()
dat %>%
ggplot(aes(x = b, color = factor(i))) +
geom_density(adjust = 4) +
facet_wrap(~ gamma)
dat <- map(1:1000, function(p) {
map(seq(0,1, by = 0.1 ), function(gamma) {
map(seq(-3,3,by = 1), function(i) {
weights <- dnorm(itemPar$b,i,1)
w <- (1 - gamma) * weights + gamma * (1 /length(b))
auswahl <- sample(1:length(b), size = 15,
replace = FALSE, prob = w)
cbind(p,i,gamma, itemPar[auswahl,])
}) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
} ) %>%
do.call(rbind, . )
library(ggplot2)
#dev.off()
dat %>%
ggplot(aes(x = b, color = factor(i))) +
geom_density(adjust = 4) +
facet_wrap(~ gamma)
# estimate_pcm.R
setwd("C:/Users/mulrlude/Documents/App lesekids/lesekids_2.0")
library(DBI)
library(RSQLite)  # oder RPostgres, je nach DB
library(TAM)
# 1. DB-Verbindung
con <- dbConnect(SQLite(), "data/test.db")  # Pfad zur DB
# 2. Daten laden
data <- dbGetQuery(con, "SELECT subject_id, item, DATE(timestamp) AS date, score FROM resp_filtered1")
# 3. Breite Datenstruktur erzeugen
library(tidyr)
library(dplyr)
wide_data <- data %>%
group_by(item) %>%
mutate(n_item = n() ) %>%
group_by(subject_id, date) %>%
mutate(n_sub = n() ) %>%
group_by(subject_id, n_item) %>%
mutate(n_sub_item = n() ) %>%
ungroup() %>%
filter(n_item > 10 & n_sub > 5 & n_sub_item <= 1) %>%
mutate(score = ifelse(score == 1, 0, ifelse(score == 2, 1, score)) ) %>%
select(-n_item, -n_sub, -n_sub_item ) %>%
tidyr::pivot_wider(names_from = item, values_from = score, values_fill = NA) %>%
dplyr::select(-subject_id, -date)
# 4. Modell schätzen
mod <- TAM::tam.mml(as.matrix(wide_data), verbose= F)
# 5. item flags
itemFit <- TAM::msq.itemfit(mod)
itemFit$summary_itemfit
itemFit$itemfit
# 5. item flags
fit1  <- IRT.itemfit(mod)
fit1$RMSD %>% filter(Group1 > 0.08)
fit1$RMSD %>% pull(Group1) %>% hist
fit1$RMSD %>% filter(Group1 > 0.12)
fit1
fit1$RMSD
itemFit <- fit1$RMSD %>%
mutate(RMSD = Group1) %>%
select(item, RMSD)
# 6. Itemparameter extrahieren
params <- mod$item %>% merge(.,itemFit, by = "item") %>%
mutate(item = as.integer(item),
N = as.integer(N),
threshold_1 = AXsi_.Cat1,
threshold_2 = AXsi_.Cat1-2) %>%
select(item, N, M, threshold_1, threshold_2 )
View(params)
# 6. Itemparameter extrahieren
params <- mod$item %>% merge(.,itemFit, by = "item") %>%
mutate(item = as.integer(item),
N = as.integer(N),
threshold_1 = AXsi_.Cat1,
threshold_2 = AXsi_.Cat1-2) %>%
select(item, N, M, threshold_1, threshold_2,RMSD )
View(params)
# 6. Itemparameter extrahieren
params <- mod$item %>% merge(.,itemFit, by = "item") %>%
mutate(item = as.integer(item),
N = as.integer(N),
threshold_1 = AXsi_.Cat1,
threshold_2 = AXsi_.Cat1-2,
weight = ifelse(N > 100 & RMSD > 0.08,0,1 )
) %>%
select(item, N, M, threshold_1, threshold_2, RMSD, weight )
params$estDate <- format(as.POSIXct(Sys.time(), tz = "UTC"),
"%Y-%m-%dT%H:%M:%OS3Z")
params$points_first_try <- as.integer(round((params$threshold_2 + 10)*10))
params$points_later_try <- as.integer(round((params$threshold_1 + 10)*10))
params$first_threshold <- as.integer(2000)
View(params)
